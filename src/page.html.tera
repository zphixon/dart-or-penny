<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf8" />
    <title>{{ tab_title }}</title>
    <style>
      h1 { color: green; }
      .icon > img {
        max-height: 3em;
        max-width: 3em;
      }
      .filetable {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1px;
        background: green;
      }
      .row {
        display: grid;
        gap: 1px;
        grid-template-columns: 3em 3fr repeat(3, 1fr);
      }
      .row > div {
        background: white;
        padding: 0.25em;
      }
      .row > .filename {
        word-break: break-all;
      }
      .icon {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      @media (max-width: 1150px) {
        .modified, .accessed {
          display: none;
        }
        .row {
          grid-template-columns: 3em 3fr minmax(12em, 1fr);
        }
      }
      #searchboxdiv {
        display: flex;
        column-gap: 0.5em;
        padding-bottom: 1em;
      }
      #searchbox {
        flex-grow: 1;
      }
    </style>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, minimal-ui">
  </head>
  <body>
    <h1>
      {% for part in page_title_parts %}
        <a href="{{ part.href }}">{{ part.path }}</a>
        {% if not part.last %}
          /
        {% endif %}
      {% endfor %}
    </h1>
    <div id="searchboxdiv">
      <button id="clearSearch">clear search</button>
      <input id="searchbox" type="text" placeholder="üîé search"/>
      <label for="caseSensitive">case sensitive?</label>
      <input id="caseSensitive" type="checkbox"/>
      <button id="searchEverywhere">search everywhere</button>
    </div>
    <div class="filetable">
      <div class="header row">
        <div class="header numfiles">{{ num_files }}</div>
        <div class="header filename">filename</div>
        <div class="header created">created</div>
        <div class="header modified">modified</div>
        <div class="header accessed">accessed</div>
      </div>
      {% for dir in dirs %}
        <div class="dir row">
          <div class="dir icon">üìÅ</div>
          <div class="dir filename">
            <a href="{{ dir.filename }}">{{ dir.basename }}</a>
          </div>
          <div class="dir created">{{ dir.created }}</div>
          <div class="dir modified">{{ dir.modified }}</div>
          <div class="dir accessed">{{ dir.accessed }}</div>
        </div>
      {% endfor %}
      {% for file in files %}
        <div class="file row">
          <div class="file icon">
            {% if file.thumbnail_filename %}
              <img loading="lazy" src="{{ page_root }}/thumbnail/{{ file.thumbnail_filename }}" />
            {% else %}
              üìÉ
            {% endif %}
          </div>
          <div class="file filename">
            <a href="{{ file.filename }}" target="_blank" rel="noopener noreferrer">{{ file.basename }}</a>
          </div>
          <div class="file created">{{ file.created }}</div>
          <div class="file modified">{{ file.modified }}</div>
          <div class="file accessed">{{ file.accessed }}</div>
        </div>
      {% endfor %}
    </div>
    <script type="text/javascript">
      let searchbox = document.getElementById("searchbox");
      let searchEverywhere = document.getElementById("searchEverywhere");
      let clearSearch = document.getElementById("clearSearch");
      let sensitive = document.getElementById("caseSensitive");

      function matches(haystack, needle) {
        if (needle == "") {
          return true;
        }
        let flags = "i";
        if (sensitive.checked) {
          flags = "";
        }
        return haystack.search(new RegExp(needle, flags)) >= 0;
        //return a.toLocaleLowerCase().indexOf(b.toLocaleLowerCase()) >= 0;
      }

      function filterList(filterQuery) {
        let rows = document.querySelectorAll(".row:not(.header)");
        for (let row of rows) {
          let filename = row.querySelector(".filename");
          if (filename == null) {
            continue;
          }
          if (matches(filename.innerText, filterQuery)) {
            // setting display to empty string resets to previous display property
            row.style.display = "";
          } else {
            row.style.display = "none";
          }
        }
      }

      function displayEverywhereSearchResults(filelist) {
        let fileTable = document.querySelector(".filetable");
        fileTable.style.display = 'none';

        for (result of document.querySelectorAll('.everywheresearch')) {
          result.remove();
        }
        let i = -1;
        for (file of filelist) {
          i += 1;
          let div = document.createElement('div');
          div.classList.add('everywheresearch');

          let firsta = document.createElement("a");
          firsta.href = "{{ page_root }}";
          firsta.appendChild(document.createTextNode("{{ file_dir }}"));
          div.appendChild(firsta);

          var total = "{{ page_root }}";
          for (part of file.split('{{ path_sep }}')) {
            if (part === "") {
              continue;
            }

            total += "/" + part;
            let a = document.createElement('a');
            a.href = total;
            if (i + 1 == filelist.length) {
              a.target = "_blank";
              a.rel = "noopener noreferrer";
            }
            a.appendChild(document.createTextNode(part));
            div.appendChild(document.createTextNode("/"));
            div.appendChild(a);
          }

          fileTable.parentElement.appendChild(div);
        }
      }

      let searchingEverywhere = false;
      function doSearchEverywhere() {
        searchingEverywhere = true;
        fetch(
          "{{ page_root }}/search?regex="
          + encodeURIComponent(searchbox.value)
          + (sensitive.checked ? "&case_insensitive=false" : "")
        )
          .then(response => response.json())
          .then(filelist => {
            displayEverywhereSearchResults(filelist);
          });
      }

      function doClearSearch() {
        searchingEverywhere = false;
        for (let everySearch of document.querySelectorAll(".everywheresearch")) {
          everySearch.remove();
        }

        let fileTable = document.querySelector(".filetable");
        fileTable.style.display = "";

        searchbox.value = "";
        filterList("");
      }

      searchbox.oninput = event => filterList(event.target.value);
      searchbox.onkeydown = event => {
        if (event.key === 'Enter' && searchingEverywhere) {
          doSearchEverywhere();
        }

        if (event.key === 'Escape') {
          doClearSearch();
        }
      };

      sensitive.onchange = _ => filterList(searchbox.value);

      clearSearch.onclick = _ => {
        doClearSearch();
      };

      searchEverywhere.onclick = _ => doSearchEverywhere();
    </script>
  </body>
</html>